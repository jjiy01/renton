create table tb_users (
    user_id varchar(10) primary key,
    user_name varchar(256) not null,
    email varchar(256) not null unique,
    password varchar(256) not null,
);

create table tb_groups (
	group_id bigint generated by default as identity(start with 1) primary key,
	group_name varchar(256) not null,
	description varchar(4000)
);

create table tb_authorities (
	authority_id bigint generated by default as identity(start with 1) primary key,
	authority varchar(50) not null unique,
	description varchar(4000)
);

create table tb_group_authorities (
	group_id bigint not null,
	authority_id bigint not null,
	constraint fk_group_authorities_group
	foreign key(group_id) references tb_groups(group_id),
	constraint fk_group_authorities_authority
	foreign key(authority_id) references tb_authorities(authority_id)
);

create table tb_group_members (
	id bigint generated by default as identity(start with 1) primary key,
	group_id bigint not null,
	user_id varchar(10) not null,
	constraint fk_group_members_group
	foreign key(group_id) references tb_groups(group_id),
	constraint fk_group_members_user
	foreign key(user_id) references tb_users(user_id)
);

create table oauth_client_details (
  client_id VARCHAR(256) PRIMARY KEY,
  resource_ids VARCHAR(256),
  client_secret VARCHAR(256),
  scope VARCHAR(256),
  authorized_grant_types VARCHAR(256),
  web_server_redirect_uri VARCHAR(256),
  authorities VARCHAR(256),
  access_token_validity INTEGER,
  refresh_token_validity INTEGER,
  additional_information VARCHAR(4096),
  autoapprove VARCHAR(256)
);

create table oauth_client_token (
  token_id VARCHAR(256),
  token LONGVARBINARY,
  authentication_id VARCHAR(256) PRIMARY KEY,
  user_name VARCHAR(256),
  client_id VARCHAR(256)
);

create table oauth_access_token (
  token_id VARCHAR(256),
  token LONGVARBINARY,
  authentication_id VARCHAR(256) PRIMARY KEY,
  user_name VARCHAR(256),
  client_id VARCHAR(256),
  authentication LONGVARBINARY,
  refresh_token VARCHAR(256)
);

create table oauth_refresh_token (
  token_id VARCHAR(256),
  token LONGVARBINARY,
  authentication LONGVARBINARY
);

create table oauth_code (
  code VARCHAR(256), authentication LONGVARBINARY
);

create table oauth_approvals (
	userId VARCHAR(256),
	clientId VARCHAR(256),
	scope VARCHAR(256),
	status VARCHAR(10),
	expiresAt TIMESTAMP,
	lastModifiedAt TIMESTAMP
);


-- customized oauth_client_details table
create table ClientDetails (
  appId VARCHAR(256) PRIMARY KEY,
  resourceIds VARCHAR(256),
  appSecret VARCHAR(256),
  scope VARCHAR(256),
  grantTypes VARCHAR(256),
  redirectUrl VARCHAR(256),
  authorities VARCHAR(256),
  access_token_validity INTEGER,
  refresh_token_validity INTEGER,
  additionalInformation VARCHAR(4096),
  autoApproveScopes VARCHAR(256)
);